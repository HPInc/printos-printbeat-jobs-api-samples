{
	"info": {
		"_postman_id": "bac1425e-6d32-4a2f-8281-5f5a49e5d77c",
		"name": "Print Beat Jobs API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "10916568"
	},
	"item": [
		{
			"name": "Use Cases",
			"item": [
				{
					"name": "All jobs on a Press",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var key = postman.getEnvironmentVariable(\"key\");",
									"var secret = postman.getEnvironmentVariable(\"secret\");",
									"var context = postman.getEnvironmentVariable(\"context\");",
									"var endpoint = \"/jobs-sdk/jobs/\" + context;",
									"",
									"var headers = createHeaders (\"GET\", endpoint );",
									"",
									"postman.setEnvironmentVariable(\"hmacHeader\", headers[0]);",
									"postman.setEnvironmentVariable(\"timestamp\", headers[1]);",
									"",
									"function createHeaders(method, path) {",
									"    var timestamp = (new Date()).toISOString();",
									"    ",
									"    var toSign = method.toUpperCase() + \" \" + path + timestamp;",
									"    console.log('Creating hash with string ', toSign);",
									"    var hash = CryptoJS.HmacSHA256(toSign, secret);",
									"    var sig = CryptoJS.enc.Hex.stringify(hash);",
									"    var headers = [",
									"      key + \":\" + sig,",
									"      timestamp,",
									"      \"SHA256\"",
									"    ];",
									"    return headers;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"disabled": true
							},
							{
								"key": "x-hp-hmac-authentication",
								"value": "{{hmacHeader}}"
							},
							{
								"key": "x-hp-hmac-date",
								"value": "{{timestamp}}"
							},
							{
								"key": "x-hp-hmac-algorithm",
								"value": "SHA256",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{SmsHost}}/jobs-service/jobs-sdk/jobs/{{context}}?device={{deviceid}}",
							"host": [
								"{{SmsHost}}"
							],
							"path": [
								"jobs-service",
								"jobs-sdk",
								"jobs",
								"{{context}}"
							],
							"query": [
								{
									"key": "device",
									"value": "{{deviceid}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Jobs on a Press with Work Time Estimate",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var key = postman.getEnvironmentVariable(\"key\");",
									"var secret = postman.getEnvironmentVariable(\"secret\");",
									"var context = postman.getEnvironmentVariable(\"context\");",
									"var endpoint = \"/jobs-sdk/jobs/\" + context;",
									"",
									"var headers = createHeaders (\"GET\", endpoint );",
									"",
									"postman.setEnvironmentVariable(\"hmacHeader\", headers[0]);",
									"postman.setEnvironmentVariable(\"timestamp\", headers[1]);",
									"",
									"function createHeaders(method, path) {",
									"    var timestamp = (new Date()).toISOString();",
									"    ",
									"    var toSign = method.toUpperCase() + \" \" + path + timestamp;",
									"    console.log('Creating hash with string ', toSign);",
									"    var hash = CryptoJS.HmacSHA256(toSign, secret);",
									"    var sig = CryptoJS.enc.Hex.stringify(hash);",
									"    var headers = [",
									"      key + \":\" + sig,",
									"      timestamp,",
									"      \"SHA1\"",
									"    ];",
									"    return headers;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"disabled": true
							},
							{
								"key": "x-hp-hmac-authentication",
								"value": "{{hmacHeader}}"
							},
							{
								"key": "x-hp-hmac-date",
								"value": "{{timestamp}}"
							},
							{
								"key": "x-hp-hmac-algorithm",
								"value": "SHA256",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{SmsHost}}/jobs-service/jobs-sdk/jobs/{{context}}?devices={{deviceid}}&properties=location,locationType,marker,queueOrderIndex,jobWorkTimeEstimate",
							"host": [
								"{{SmsHost}}"
							],
							"path": [
								"jobs-service",
								"jobs-sdk",
								"jobs",
								"{{context}}"
							],
							"query": [
								{
									"key": "devices",
									"value": "{{deviceid}}"
								},
								{
									"key": "properties",
									"value": "location,locationType,marker,queueOrderIndex,jobWorkTimeEstimate"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "/jobs-sdk/jobs/{context}",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var key = postman.getEnvironmentVariable(\"key\");",
							"var secret = postman.getEnvironmentVariable(\"secret\");",
							"var context = postman.getEnvironmentVariable(\"context\");",
							"var endpoint = \"/jobs-sdk/jobs/\" + context;",
							"",
							"var headers = createHeaders (\"GET\", endpoint );",
							"",
							"postman.setEnvironmentVariable(\"hmacHeader\", headers[0]);",
							"postman.setEnvironmentVariable(\"timestamp\", headers[1]);",
							"",
							"function createHeaders(method, path) {",
							"    var timestamp = (new Date()).toISOString();",
							"    ",
							"    var toSign = method.toUpperCase() + \" \" + path + timestamp;",
							"    console.log('Creating hash with string ', toSign);",
							"    var hash = CryptoJS.HmacSHA256(toSign, secret);",
							"    var sig = CryptoJS.enc.Hex.stringify(hash);",
							"    var headers = [",
							"      key + \":\" + sig,",
							"      timestamp,",
							"      \"SHA1\"",
							"    ];",
							"    return headers;",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"disabled": true
					},
					{
						"key": "x-hp-hmac-authentication",
						"value": "{{hmacHeader}}"
					},
					{
						"key": "x-hp-hmac-date",
						"value": "{{timestamp}}"
					},
					{
						"key": "x-hp-hmac-algorithm",
						"value": "SHA256",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{SmsHost}}/jobs-service/jobs-sdk/jobs/{{context}}",
					"host": [
						"{{SmsHost}}"
					],
					"path": [
						"jobs-service",
						"jobs-sdk",
						"jobs",
						"{{context}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "/jobs-sdk/jobs/{context} with startMarker",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var key = postman.getEnvironmentVariable(\"key\");",
							"var secret = postman.getEnvironmentVariable(\"secret\");",
							"var context = postman.getEnvironmentVariable(\"context\");",
							"var endpoint = \"/jobs-sdk/jobs/\" + context;",
							"",
							"var headers = createHeaders (\"GET\", endpoint );",
							"",
							"postman.setEnvironmentVariable(\"hmacHeader\", headers[0]);",
							"postman.setEnvironmentVariable(\"timestamp\", headers[1]);",
							"",
							"function createHeaders(method, path) {",
							"    var timestamp = (new Date()).toISOString();",
							"    ",
							"    var toSign = method.toUpperCase() + \" \" + path + timestamp;",
							"    console.log('Creating hash with string ', toSign);",
							"    var hash = CryptoJS.HmacSHA256(toSign, secret);",
							"    var sig = CryptoJS.enc.Hex.stringify(hash);",
							"    var headers = [",
							"      key + \":\" + sig,",
							"      timestamp,",
							"      \"SHA1\"",
							"    ];",
							"    return headers;",
							"}"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"var responseJSON;",
							"try {",
							"    responseJSON = JSON.parse(responseBody);",
							"    var records = responseJSON.length;",
							"    console.log(\"Number of returned records is: \" + records);",
							"    tests[\"Response Body not empty\"] = records > 0;",
							"    if (records > 0){",
							"        var marker = responseJSON[records - 1].marker;",
							"        console.log(\"Last marker in result set is: \" + marker);",
							"        if (marker !== null){",
							"            marker++;",
							"            postman.setEnvironmentVariable(\"marker\", marker);",
							"        }",
							"    }",
							"    else {",
							"        //if no response data was found reset the marker to 0 to cycle through response set again",
							"        postman.setEnvironmentVariable(\"marker\", marker);",
							"    }",
							"}",
							"catch (e) {}",
							"",
							"tests[\"Status code is 200\"] = responseCode.code === 200;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"disabled": true
					},
					{
						"key": "x-hp-hmac-authentication",
						"value": "{{hmacHeader}}"
					},
					{
						"key": "x-hp-hmac-date",
						"value": "{{timestamp}}"
					},
					{
						"key": "x-hp-hmac-algorithm",
						"value": "SHA256",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{SmsHost}}/jobs-service/jobs-sdk/jobs/{{context}}?startMarker={{marker}}",
					"host": [
						"{{SmsHost}}"
					],
					"path": [
						"jobs-service",
						"jobs-sdk",
						"jobs",
						"{{context}}"
					],
					"query": [
						{
							"key": "startMarker",
							"value": "{{marker}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "/jobs-sdk/propertyspecs",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var key = postman.getEnvironmentVariable(\"key\");",
							"var secret = postman.getEnvironmentVariable(\"secret\");",
							"var endpoint = \"/jobs-sdk/propertyspecs\";",
							"var headers = createHeaders (\"GET\", endpoint );",
							"",
							"postman.setEnvironmentVariable(\"hmacHeader\", headers[0]);",
							"postman.setEnvironmentVariable(\"timestamp\", headers[1]);",
							"",
							"function createHeaders(method, path) {",
							"    var timestamp = (new Date()).toISOString();",
							"    ",
							"    var toSign = method.toUpperCase() + \" \" + path + timestamp;",
							"    console.log('Creating hash with string ', toSign);",
							"    var hash = CryptoJS.HmacSHA256(toSign, secret);",
							"    var sig = CryptoJS.enc.Hex.stringify(hash);",
							"    var headers = [",
							"      key + \":\" + sig,",
							"      timestamp,",
							"      \"SHA1\"",
							"    ];",
							"    return headers;",
							"}"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"var responseJSON;",
							"try {",
							"    responseEndPoint = responseBody;",
							"    tests[\"Async resposne not empty\"] = responseEndPoint !== \"\";",
							"    postman.setEnvironmentVariable(\"jobsSdkAsync\", responseEndPoint);",
							"}",
							"catch (e) {}",
							"",
							"tests[\"Status code is 200\"] = responseCode.code === 200;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "x-hp-hmac-authentication",
						"value": "{{hmacHeader}}"
					},
					{
						"key": "x-hp-hmac-date",
						"value": "{{timestamp}}"
					},
					{
						"key": "x-hp-hmac-algorithm",
						"value": "SHA256",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{SmsHost}}/jobs-service/jobs-sdk/propertyspecs",
					"host": [
						"{{SmsHost}}"
					],
					"path": [
						"jobs-service",
						"jobs-sdk",
						"propertyspecs"
					]
				}
			},
			"response": []
		}
	]
}
